---
name: mkdocs-publish
on:
  push:
    branches:
      - main
  workflow_dispatch:
    # ForceRedeploy is a boolean that will be passed to the job for conditional execution
    inputs:
      ForceRedeploy:
        description: 'Force a redeploy of the site'
        required: false
        default: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      changes: ${{ steps.changes.outputs.src }}
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'notes/**/*.md'
              - 'mkdocs.yml'
              - '.github/workflows/mkdocs-publish.yml'
      # https://github.com/magnetikonline/action-golang-cache
      - if: steps.changes.outputs.src == 'true' || ${{ github.event.inputs.ForceRedeploy == 'true' }}
        name: setup-golang-with-cache
        uses: magnetikonline/action-golang-cache@797f193169d3c8ba6f60d90f50ecdadd2583fbd8 # tag=v3
        with:
          go-version-file: go.mod
      - if: steps.changes.outputs.src == 'true' || ${{ github.event.inputs.ForceRedeploy == 'true' }}
        name: set-aqua-policy-if-file-exists
        run: |
          if [ -f aqua-policy.yaml ]; then
            echo "AQUA_POLICY_CONFIG=${GITHUB_WORKSPACE}/aqua-policy.yaml:${AQUA_POLICY_CONFIG}" >> $GITHUB_ENV
          else
            echo "ðŸ‘‰ No aqua-policy.yaml file found, skipping setting AQUA_POLICY_CONFIG"
          fi
      - if: steps.changes.outputs.src == 'true' || ${{ github.event.inputs.ForceRedeploy == 'true' }}
        uses: aquaproj/aqua-installer@fd2089d1f56724d6456f24d58605e6964deae124 # v2.3.2
        with:
          aqua_version: v2.10.1
          # working_directory:
          aqua_opts: '--tags release'
        env:
          AQUA_LOG_LEVEL: debug
      - if: steps.changes.outputs.src == 'true' || ${{ github.event.inputs.ForceRedeploy == 'true' }}
        uses: actions/setup-python@65d7f2d534ac1bc67fcd62888c5f4f3d2cb2b236 # v4
        with:
          python-version: 3.x
      - if: steps.changes.outputs.src == 'true' || ${{ github.event.inputs.ForceRedeploy == 'true' }}
        uses: actions/cache@e12d46a63a90f2fae62d114769bbf2a179198b5c # v3
        with:
          key: ${{ github.ref }}
          path: .cache
      - if: steps.changes.outputs.src == 'true' || ${{ github.event.inputs.ForceRedeploy == 'true' }}
        name: mage-init-build-publish
        run: |
          mage docker:build mkdocs:build mkdocs:ghdeploy

      # - if: steps.changes.outputs.src == 'true'
      #   run: pip install mkdocs-material mkdocs-glightbox mkdocs-rss-plugin mkdocs-awesome-pages-plugin
      # # - run: mkdocs gh-deploy --force
      # - if: steps.changes.outputs.src == 'true'
      #   name: mkdocs-build #(_site directory name is used for Jekyll compatiblity)
      #   run: mkdocs build --config-file ./mkdocs.yml --site-dir ./_site
      - if: steps.changes.outputs.src == 'true' || ${{ github.event.inputs.ForceRedeploy == 'true' }}
        name: upload-pages-artifact
        uses: actions/upload-pages-artifact@a753861a5debcf57bf8b404356158c8e1e33150c # v2.0.0
        with:
          path: .artifacts/_site
  # Deployment job
  deploy:
    needs: build
    if: ${{ needs.build.outputs.changes == 'true' }} || ${{ github.event.inputs.ForceRedeploy == 'true' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: deploy-to-github-pages
        id: deployment
        uses: actions/deploy-pages@de14547edc9944350dc0481aa5b7afb08e75f254 # v2
